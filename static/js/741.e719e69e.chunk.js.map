{"version":3,"file":"static/js/741.e719e69e.chunk.js","mappings":"uPACA,EAA4B,6BAA5B,EAAsE,8BAAtE,EAA+G,4B,SCkCzGA,GAAiBC,EAAAA,EAAAA,GAA4C,CAACC,KAAM,SAAnDD,ECxBsF,SAAC,GAIO,IAHHE,EAGE,EAHFA,aACAC,EAEE,EAFFA,MACAC,EACE,EADFA,WAE9G,OACI,kBAAMC,SAAUH,EAAcI,UAAWC,EAAzC,WAEI,4CAECC,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAACC,KAAM,QAAS,KACjEH,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAACC,KAAM,YAAa,KAC5E,gBAAKL,UAAWC,EAAhB,UACKC,EAAAA,EAAAA,IAAa,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAM,YAAa,iBAGpEP,IAAc,gBAAKQ,IAAKR,EAAYS,IAAK,eACzCT,IAAcI,EAAAA,EAAAA,IAAY,qBAAsB,UAAW,CAACC,EAAAA,GAAWC,EAAAA,IAGpEP,IACA,gBAAKG,UAAWQ,EAAAA,EAAAA,iBAAhB,SAAqCX,KAEzC,0BACI,8CDEhB,EA3B4C,SAACY,GAEzC,IAAMX,GAAaY,EAAAA,EAAAA,KAAyC,SAAAC,GAAK,OAAIA,EAAMC,KAAKd,cAC1Ee,GAASH,EAAAA,EAAAA,KAAmC,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAEhEC,GAAWC,EAAAA,EAAAA,MAMjB,OAAIF,GACO,SAAC,KAAD,CAAUG,GAAI,cAIrB,gBAAKhB,UAAWQ,EAAhB,UACI,SAACf,EAAD,CACIM,SAXK,SAACkB,GACdH,GAASI,EAAAA,EAAAA,IAAMD,EAASE,MAAOF,EAASG,SAAUH,EAASI,WAAYJ,EAASK,WAWxExB,WAAYA","sources":["webpack://social_network_ts/./src/components/Login/loginPage.module.css?f757","components/Login/LoginPage.tsx","components/Login/LoginForm.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loginPage\":\"loginPage_loginPage__GQf2y\",\"loginBlock\":\"loginPage_loginBlock__iifi4\",\"checkbox\":\"loginPage_checkbox__Mu4Hg\"};","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {login} from \"../../Redux/auth-reducer\";\r\nimport {LoginForm, LoginFormPropsType} from \"./LoginForm\";\r\nimport s from \"./loginPage.module.css\"\r\n\r\n\r\nconst LoginPage: React.FC<LoginPropsType> = (props) => {\r\n\r\n    const captchaUrl = useSelector<AppStateType, string | null>(state => state.auth.captchaUrl)\r\n    const isAuth = useSelector<AppStateType, boolean>(state => state.auth.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <LoginReduxForm\r\n                onSubmit={onSubmit}\r\n                captchaUrl={captchaUrl}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType, LoginFormPropsType>({form: \"Login\"})(LoginForm)\r\n\r\nexport default LoginPage\r\n\r\n// TYPES\r\ntype LoginPropsType = {}\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n","import React from \"react\";\r\nimport {InjectedFormProps} from \"redux-form\";\r\nimport {createField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../Utils/Validators/Validators\";\r\nimport s from \"../Common/FormsControls/FormsControls.module.css\";\r\nimport style from \"./loginPage.module.css\";\r\nimport {FormDataType} from \"./LoginPage\";\r\n\r\nexport type LoginFormPropsType = {\r\n    captchaUrl: string | null\r\n}\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType, LoginFormPropsType> & LoginFormPropsType> = ({\r\n                                                                                                                  handleSubmit,\r\n                                                                                                                  error,\r\n                                                                                                                  captchaUrl\r\n                                                                                                              }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={style.loginBlock}>\r\n\r\n            <h1>Social Network</h1>\r\n\r\n            {createField(\"Email\", \"email\", [required], Input, {type: \"text\"}, \"\")}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"}, \"\")}\r\n            <div className={style.checkbox}>\r\n                {createField (null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Remember me\")}\r\n            </div>\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt={'captchaUrl'}/>}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input)}\r\n\r\n            {\r\n                error &&\r\n                <div className={s.formSummaryError}>{error}</div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","className","style","createField","required","Input","type","src","alt","s","props","useSelector","state","auth","isAuth","dispatch","useDispatch","to","formData","login","email","password","rememberMe","captcha"],"sourceRoot":""}