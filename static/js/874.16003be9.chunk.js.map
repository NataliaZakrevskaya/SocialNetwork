{"version":3,"file":"static/js/874.16003be9.chunk.js","mappings":"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","sources":["components/Common/FormsControls/FormsControls.tsx","Images/preloader.svg","webpack://social_network_ts/./src/components/Common/Preloader/Preloader.module.css?d1e9","components/Common/Preloader/Preloader.tsx","webpack://social_network_ts/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","webpack://social_network_ts/./src/components/Profile/ProfileInfo/ProfileFormData/ProfileDataForm.module.css?3de3","components/Profile/ProfileInfo/ProfileFormData/ProfileDataForm.tsx","webpack://social_network_ts/./src/components/Profile/MyPosts.ts/MyPosts.module.css?74ec","components/Profile/ProfileInfo/ProfileFormData/Contact/Contact.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social_network_ts/./src/components/Profile/Profile.module.css?b512","webpack://social_network_ts/./src/components/Profile/MyPosts.ts/Post/Post.module.css?ab61","components/Profile/MyPosts.ts/Post/Post.tsx","components/Profile/MyPosts.ts/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts.ts/MyPosts.tsx","components/Profile/Profile.tsx","HOC/WithAuthRedirect.tsx","components/Profile/ProfileContainer.tsx","HOC/withRouter.tsx","webpack://social_network_ts/./src/components/Common/FormsControls/FormsControls.module.css?8edf"],"sourcesContent":["import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children, ...props}: any) => {\r\n    const hasError = touched && error;\r\n    const styleError = hasError ? s.error : \"\"\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + styleError}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    ;\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\nexport const Input = (props: any) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: string | null, name: string, validators: any[], component: any, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                component={component}\r\n                validate={validators}\r\n                {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n","var _rect, _rect2, _rect3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPreloader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    style: {\n      margin: \"auto\",\n      background: \"rgb(255, 255, 255)\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"250px\",\n    height: \"250px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 15.5,\n    y: 46,\n    width: 19,\n    height: 8,\n    fill: \"#101010\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"y\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"42.4;46;46\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.12903225806451613s\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"height\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"15.2;8;8\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.12903225806451613s\"\n  }))), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40.5,\n    y: 46,\n    width: 19,\n    height: 8,\n    fill: \"#224634\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"y\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"43.3;46;46\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.06451612903225806s\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"height\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"13.399999999999999;8;8\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.06451612903225806s\"\n  }))), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 65.5,\n    y: 46,\n    width: 19,\n    height: 8,\n    fill: \"#2f6144\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"y\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"43.3;46;46\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"height\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"13.399999999999999;8;8\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPreloader);\nexport default __webpack_public_path__ + \"static/media/preloader.54754ffb8be834ad251e5ccf17350deb.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"preloader\":\"Preloader_preloader__HOrT6\"};","import React from \"react\";\r\nimport preloader from \"../../../Images/preloader.svg\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__wE0z3\",\"imagesBlock\":\"ProfileInfo_imagesBlock__XpkcG\",\"backgroundImg\":\"ProfileInfo_backgroundImg__W1Fz8\",\"avatar\":\"ProfileInfo_avatar__dskF6\",\"avatarEdit\":\"ProfileInfo_avatarEdit__cOGbx\",\"profileInfo\":\"ProfileInfo_profileInfo__r6iBl\",\"statusBlock\":\"ProfileInfo_statusBlock__Pd7FO\",\"status\":\"ProfileInfo_status__Fh3np\",\"ownerStatus\":\"ProfileInfo_ownerStatus__vKoH0\",\"lookingJob\":\"ProfileInfo_lookingJob__Bcnk+\",\"editButtonContainer\":\"ProfileInfo_editButtonContainer__HquyV\",\"editButton\":\"ProfileInfo_editButton__KdMYq\",\"profileInfoData\":\"ProfileInfo_profileInfoData__ZpKNY\",\"majorInfo\":\"ProfileInfo_majorInfo__6+dYW\",\"fullName\":\"ProfileInfo_fullName__xReSF\",\"skills\":\"ProfileInfo_skills__PT2E3\",\"showContactsButton\":\"ProfileInfo_showContactsButton__3f2Ht\",\"contacts\":\"ProfileInfo_contacts__v7yFB\",\"contact\":\"ProfileInfo_contact__Pq+gb\",\"contactLinks\":\"ProfileInfo_contactLinks__VCUa+\",\"link\":\"ProfileInfo_link__DrqrA\",\"editInfo\":\"ProfileInfo_editInfo__3vhr-\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from \"../ProfileInfo.module.css\"\r\n\r\nexport const ProfileStatus = (props: ProfileStatusType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner && setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            {!editMode &&\r\n                <div className={s.status}><b>Status: </b>\r\n                        <span className={props.isOwner ? s.ownerStatus : ''}\r\n                            onDoubleClick={activateEditMode}\r\n                        >{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// TYPES\r\ntype ProfileStatusType = {\r\n    status: string\r\n    isOwner : boolean\r\n    updateStatus: (status: string) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInfo\":\"ProfileDataForm_editInfo__CCA9h\",\"contactName\":\"ProfileDataForm_contactName__Xy1x6\"};","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Preloader} from \"../../../Common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../../Redux/profile-reducer\";\r\nimport {createField, Input, Textarea} from \"../../../Common/FormsControls/FormsControls\";\r\nimport s from \"./ProfileDataForm.module.css\";\r\nimport style from \"./../../../Common/FormsControls/FormsControls.module.css\"\r\n\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, ProfileDataFormPropsType> & ProfileDataFormPropsType> = ({\r\n                                                                                                                            handleSubmit,\r\n                                                                                                                            profile,\r\n                                                                                                                            error\r\n                                                                                                                        }) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.editInfo}>\r\n\r\n            {\r\n                error &&\r\n                <div className={style.formSummaryError}>{error}</div>\r\n            }\r\n\r\n            <b>Full name </b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n            <b>My professional skills </b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            <b>Looking for a job </b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n\r\n            <div>\r\n                <h3>Contacts </h3> {Object.keys(profile.contacts)\r\n                .map(key => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <b className={s.contactName}>{key}</b>\r\n                            {createField(key, \"contacts.\" + key, [], Input)}\r\n                        </div>\r\n\r\n                    )\r\n\r\n                })}\r\n            </div>\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm<ProfileType, ProfileDataFormPropsType>({form: 'edit-profile'})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;\r\n\r\n\r\n// TYPES\r\ntype ProfileDataFormPropsType = {\r\n    profile: ProfileType\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__MOVQA\",\"hr\":\"MyPosts_hr__LNPid\",\"addPostFormBlock\":\"MyPosts_addPostFormBlock__2Z+Ce\",\"fieldContainer\":\"MyPosts_fieldContainer__zylf0\",\"textField\":\"MyPosts_textField__kaDEY\",\"errorField\":\"MyPosts_errorField__gVTOP\",\"errorSpan\":\"MyPosts_errorSpan__66YrW\",\"posts\":\"MyPosts_posts__qcqm9\"};","import React from \"react\";\r\nimport s from \"../../ProfileInfo.module.css\";\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}: ContactPropsType) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <b>{contactTitle}: </b>\r\n            <a href={contactValue} className={s.link} target=\"_blank\">{contactValue}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\n// TYPES\r\ntype ContactPropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}","import React, {useState} from \"react\";\r\nimport {Preloader} from \"../../../Common/Preloader/Preloader\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport style from \"../../MyPosts.ts/MyPosts.module.css\";\r\nimport {ContactsType, ProfileType} from \"../../../../Redux/profile-reducer\";\r\nimport {Contact} from \"../ProfileFormData/Contact/Contact\";\r\n\r\nexport const ProfileData = ({profile, isOwner, goToEditMode}: ProfileDataPropsType) => {\r\n\r\n    const [showContacts, setShowContacts] = useState<boolean>(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let contacts = []\r\n\r\n    return (\r\n        <div className={s.profileInfoData}>\r\n\r\n            <hr className={style.hr}/>\r\n            {isOwner\r\n                && <div className={s.editButtonContainer}>\r\n                    <button className={s.editButton} onClick={goToEditMode}>✎</button>\r\n                </div>}\r\n            <div className={s.majorInfo}>\r\n                <div className={s.fullName}>\r\n                    {profile.fullName}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                    <div className={s.skills}>\r\n                        ({profile.lookingForAJobDescription})\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button\r\n                className={s.showContactsButton}\r\n                onClick={() => {\r\n                    setShowContacts(!showContacts)\r\n                }}\r\n            >{showContacts ? 'Hide contacts' : 'Show contacts'}\r\n            </button>\r\n\r\n            {showContacts &&\r\n                <div className={s.contacts}>\r\n                    <div className={s.contactLinks}>\r\n                        {contacts = Object.keys(profile.contacts)\r\n                            .filter(key => profile.contacts[key as keyof ContactsType] )\r\n                            .map(key => {\r\n                                    return <Contact\r\n                                        key={key}\r\n                                        contactTitle={key}\r\n                                        contactValue={profile.contacts[key as keyof ContactsType]}/>\r\n                            })}\r\n                        {contacts.length < 1 && <span>This User didn't specify any info  😩</span>}\r\n                    </div>\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// TYPES\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport {ProfileType} from \"../../../Redux/profile-reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from './ProfileFormData/ProfileDataForm';\r\nimport profileImage from \"./../../../Images/flat-face-icon-23.png\"\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (newPhoto: File) => void\r\n    saveProfile: (profileData: ProfileType) => void\r\n}\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}: ProfileInfoPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (formData: ProfileType): Promise<any> => {\r\n        await saveProfile(formData)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoBlock}>\r\n            <div className={s.imagesBlock}>\r\n                <img className={s.backgroundImg}\r\n                     src={\"https://images.pexels.com/photos/989941/pexels-photo-989941.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"}\r\n                     alt={\"img\"}/>\r\n                <div className={s.avatar}>\r\n                    <img\r\n                        src={profile && profile.photos.large !== null ? profile.photos.large : profileImage}\r\n                        alt={\"avatar\"}/>\r\n                    {isOwner && <div className={s.avatarEdit}>\r\n                        <input type={\"file\"} onChange={onMainPhotoSelected} id=\"imageUpload\"\r\n                               accept=\".png, .jpg, .jpeg\"/>\r\n                        <label htmlFor=\"imageUpload\"></label>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n\r\n                <ProfileStatus\r\n                    status={status}\r\n                    isOwner={isOwner}\r\n                    updateStatus={updateStatus}\r\n                />\r\n                {profile?.lookingForAJob ? <span className={s.lookingJob}>Looking for a job!</span> : ''}\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        initialValues={profile}\r\n                        onSubmit={onSubmit}\r\n                        profile={profile}\r\n                    />\r\n                    : <ProfileData\r\n                        profile={profile}\r\n                        isOwner={isOwner}\r\n                        goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"profilePageBlock\":\"Profile_profilePageBlock__r6GTp\"};","// extracted by mini-css-extract-plugin\nexport default {\"itemBlock\":\"Post_itemBlock__REViE\",\"item\":\"Post_item__Xp8zs\",\"userInfoContainer\":\"Post_userInfoContainer__yH4Hb\",\"messageContainer\":\"Post_messageContainer__+VseC\",\"likesContainer\":\"Post_likesContainer__bt8mV\",\"likeIsActive\":\"Post_likeIsActive__I4ird\"};","import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport s from \"./Post.module.css\"\r\nimport {PostsType, ProfileType} from \"../../../../Redux/profile-reducer\";\r\nimport {AppStateType} from \"../../../../Redux/redux-store\";\r\nimport profileImage from \"../../../../Images/flat-face-icon-23.png\";\r\n\r\n\r\nconst Post = (props: PostsType) => {\r\n\r\n    const [likesCount, setLikesCount] = useState<number>(props.likesCount)\r\n    const [isLiked, setIsLiked] = useState<boolean>(false)\r\n\r\n    const profile = useSelector<AppStateType, ProfileType>(state => state.profilePage.profile)\r\n\r\n    const like = () => {\r\n        !isLiked ?  setLikesCount(likesCount + 1) : setLikesCount(likesCount - 1)\r\n        setIsLiked(!isLiked)\r\n    }\r\n\r\n    return (\r\n        <div key={props.id} className={s.itemBlock}>\r\n            <div className={s.item}>\r\n                <div className={s.userInfoContainer}>\r\n                    <img\r\n                        src={profile?.photos.large !== null ? profile?.photos.large : profileImage}\r\n                        alt={\"img\"}/>\r\n                    <span>{profile?.fullName}</span>\r\n                </div>\r\n                <div className={s.messageContainer}>\r\n                {props.message}\r\n                </div>\r\n                <div className={`${s.likesContainer} ${isLiked ? s.likeIsActive : ''}`}>\r\n                    <span onClick={like}>{isLiked ? '❤️' : '💙' }</span>\r\n                    <span>{likesCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"../MyPosts.module.css\"\r\n\r\n\r\nexport const AddPostForm = (props: AddPostFormType) => {\r\n\r\n    const [postText, setPostText] = useState<string>('')\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n    const validate = () => {\r\n        {\r\n            postText.length > 1 ? addPost(postText) : setError(true)\r\n        }\r\n    }\r\n\r\n const addPost = (postText: string) => {\r\n     props.addNewPost(postText)\r\n     setPostText('')\r\n }\r\nconst onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setPostText(e.currentTarget.value)\r\n    setError(false)\r\n}\r\n\r\n    return (\r\n        <div className={s.addPostFormBlock}>\r\n            <div className={s.fieldContainer}>\r\n                <textarea\r\n                    value={postText}\r\n                    placeholder={\"Write your message...\"}\r\n                    className={!error ? s.textField : s.errorField }\r\n                    onChange={onChangeHandler}\r\n                />\r\n            {error && <span className={s.errorSpan}>Min length is 2 symbols</span>}\r\n            </div>\r\n            <div>\r\n                <button onClick={validate}>Add post</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n// TYPES\r\nexport type AddPostFormType = {\r\n    addNewPost: (newPostText: string) => void\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\nimport {AddPostFormRedux, AddPostFormType} from \"./AddPostForm/AddPostFormRedux\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\nimport {ProfileInitialStateType, profileReducerActions} from \"../../../Redux/profile-reducer\";\r\nimport {AddPostForm} from \"./AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const profilePage = useSelector<AppStateType, ProfileInitialStateType>(state => state.profilePage)\r\n\r\n\r\n    const postsElements =\r\n        profilePage.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    const addNewPost = (newPostText: string) => {\r\n        dispatch(profileReducerActions.addPost(newPostText))\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <hr className={s.hr}/>\r\n            <AddPostForm addNewPost={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../Redux/profile-reducer\";\r\nimport s from \"./Profile.module.css\"\r\nimport MyPosts from \"./MyPosts.ts/MyPosts\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\ntype ProfileComponentPropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (newPhoto: File) => void\r\n    saveProfile: (profileData: ProfileType) => Promise<any>\r\n}\r\n\r\nconst Profile = (props: ProfileComponentPropsType) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.profilePageBlock}>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            {props.isOwner && <MyPosts/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport function WithAuthRedirect<T>(WrappedComponent: React.ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n\r\n        const {isAuth, ...restProps} = props;\r\n\r\n        if (!isAuth) {\r\n            return <Navigate to='/login'/>\r\n        }\r\n\r\n        return <WrappedComponent {...restProps as T}/>\r\n    }\r\n\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    ProfileType,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatus\r\n} from \"../../Redux/profile-reducer\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {InjectedProps, withRouter2} from \"../../HOC/withRouter\";\r\nimport {WithAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserId: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setUserProfile: (profile: MapStateToPropsType) => void\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (newPhoto: File) => void\r\n    saveProfile: (profileData: ProfileType) => Promise<any>\r\n}\r\n\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType & InjectedProps\r\n\r\n\r\nclass ProfileAPIContainer extends React.Component<OwnPropsType> {\r\n\r\n    updateProfile(){\r\n        let userId: string = this.props.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<OwnPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.userId !== prevProps.userId) {\r\n            this.updateProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <Profile\r\n                isOwner={!this.props.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserId: state.auth.data.id\r\n    }\r\n};\r\n\r\nexport default compose<ComponentType>\r\n(connect\r\n    (mapStateToProps, {\r\n        getProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter2,\r\n    WithAuthRedirect\r\n)\r\n(ProfileAPIContainer);\r\n\r\n","import {useLocation, useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport type LocationType = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    state: object | null\r\n}\r\nexport type WrappedComponentWithRouterPropsType = {\r\n    userId: string\r\n    location: LocationType\r\n}\r\n\r\n\r\nexport type InjectedProps = {\r\n    userId: string\r\n}\r\n\r\nexport const withRouter2 = <T extends object>(WrappedComponent: React.ComponentType<T>) => (props: T) => {\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n\r\n\r\n    return (\r\n        <WrappedComponent\r\n            {...props as T}\r\n            userId={params.userId}\r\n            location={location}\r\n        />\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__sVGXJ\",\"error\":\"FormsControls_error__aFjGh\",\"formSummaryError\":\"FormsControls_formSummaryError__RCf8p\"};"],"names":["FormControl","input","meta","touched","error","children","hasError","styleError","s","className","Textarea","props","restProps","Input","createField","placeholder","name","validators","component","text","validate","Preloader","src","preloader","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","isOwner","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","handleSubmit","profile","onSubmit","style","type","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","href","target","ProfileData","goToEditMode","showContacts","setShowContacts","onClick","fullName","lookingForAJob","lookingForAJobDescription","filter","length","savePhoto","saveProfile","formData","alt","photos","large","profileImage","files","id","accept","htmlFor","initialValues","likesCount","setLikesCount","isLiked","setIsLiked","useSelector","state","profilePage","message","AddPostForm","postText","setPostText","setError","addPost","addNewPost","React","dispatch","useDispatch","postsElements","posts","p","newPostText","profileReducerActions","mapStateToPropsForRedirect","isAuth","auth","ProfileAPIContainer","userId","this","authorizedUserId","getProfile","getStatus","updateProfile","prevProps","prevState","snapshot","compose","connect","data","WrappedComponent","params","useParams","location","useLocation","to"],"sourceRoot":""}