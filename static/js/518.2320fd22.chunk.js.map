{"version":3,"file":"static/js/518.2320fd22.chunk.js","mappings":"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","sources":["webpack://social_network_ts/./src/components/Common/Paginator/Paginator.module.css?308c","components/Common/Paginator/Paginator.tsx","webpack://social_network_ts/./src/components/Users/User.module.css?05eb","components/Users/User.tsx","webpack://social_network_ts/./src/components/Users/Users.module.css?b9d0","components/Users/Users.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","Redux/Selectors/users-selectors.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__vr0UM\",\"selectedPage\":\"Paginator_selectedPage__op-V6\"};","import React, {useState} from 'react'\r\nimport s from \"./Paginator.module.css\";\r\n\r\n\r\nexport const Paginator = ({\r\n                              totalItemsCount,\r\n                              pageSize,\r\n                              currentPage,\r\n                              onPageChanged,\r\n                              portionSize = 10\r\n                          }: PaginatorPropsType) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {portionNumber > 1 &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber - 1)\r\n                }}>PREW</button>\r\n            }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span\r\n                        key={p}\r\n                        className={(currentPage) === p ? s.selectedPage : \"\"}\r\n                        onClick={(e) => {\r\n                            onPageChanged(p)\r\n                        }}\r\n                    >{p}</span>\r\n                })}\r\n            {portionCount > portionNumber &&\r\n                <button onClick={() => {\r\n                    setPortionNumber(portionNumber + 1)\r\n                }}>NEXT</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\ntype PaginatorPropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    portionSize: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__ywuuy\",\"userPhoto\":\"User_userPhoto__VW6pm\",\"unFollowBtn\":\"User_unFollowBtn__5b6t0\",\"followBtn\":\"User_followBtn__bbTkD\"};","import React from 'react'\r\nimport s from \"./User.module.css\";\r\nimport userPhoto from \"../../Images/flat-face-icon-23.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UsersType} from \"../../Redux/users-reducer\";\r\n\r\nexport const User = ({user, followingInProgress, unfollow, follow}: UsersPropsType) => {\r\n\r\n    return (\r\n\r\n        <div className={s.user}>\r\n\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small !== null ? user.photos.small : userPhoto} className={s.userPhoto}\r\n                         alt={\"userPhoto\"}/>\r\n                </NavLink>\r\n            </div>\r\n\r\n            <span>{user.name}</span>\r\n            <span>{user.status}</span>\r\n\r\n            <div>\r\n                {\r\n                    user.followed\r\n                        ? <button\r\n                            className={s.unFollowBtn}\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}>unFollow</button>\r\n\r\n                        : <button\r\n                            className={s.followBtn}\r\n                            disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                follow(user.id)\r\n                            }}>Follow</button>\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//Types\r\ntype UsersPropsType = {\r\n    user: UsersType\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingInProgress: Array<number>\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"usersPage\":\"Users_usersPage__dWc9b\",\"usersContainer\":\"Users_usersContainer__cTge6\",\"users\":\"Users_users__au+hV\"};","import React from 'react'\r\nimport {UsersType} from \"../../Redux/users-reducer\";\r\nimport {Paginator} from \"../Common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\nimport s from \"./Users.module.css\"\r\n\r\nexport const Users = ({\r\n                          totalUsersCount,\r\n                          pageSize,\r\n                          currentPage,\r\n                          onPageChanged,\r\n                          unfollow,\r\n                          follow,\r\n                          followingInProgress,\r\n                          users,\r\n                          ...props\r\n                      }: UsersPropsType) => {\r\n\r\n    return (\r\n\r\n        <div className={s.usersPage}>\r\n            <Paginator\r\n                totalItemsCount={totalUsersCount}\r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                onPageChanged={onPageChanged}\r\n                portionSize={10}\r\n            />\r\n            <div className={s.usersContainer}>\r\n                <div className={s.users}>\r\n                    {users.map(u => <User user={u}\r\n                                          unfollow={unfollow}\r\n                                          follow={follow}\r\n                                          followingInProgress={followingInProgress}\r\n                                          key={u.id}/>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//Types\r\ntype UsersPropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UsersType>\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingInProgress: Array<number>\r\n}","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {AppStateType} from \"../redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true) // фэйковая фильтрация для примера\r\n})\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getPage = (state: AppStateType) => {\r\n    return state.usersPage.page;\r\n}\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React, {ComponentType} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {Users} from './Users';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    unfollow,\r\n    UsersType\r\n} from \"../../Redux/users-reducer\";\r\nimport {Preloader} from \"../Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPage,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/Selectors/users-selectors\";\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    page: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<any>\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (userID: number) => void\r\n    unfollow: (userID: number) => void\r\n    setCurrentPage: (currentPage: number) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userID: string) => void\r\n};\r\ntype UsersPropsType = mapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass UsersAPIComponent extends React.Component<UsersPropsType> {\r\n    componentDidMount() {\r\n        const {requestUsers, page, pageSize} = this.props\r\n        requestUsers(page, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {requestUsers, pageSize} = this.props\r\n        requestUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n\r\n                <Users\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.page}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollow}\r\n                    follow={this.props.follow}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        page: getPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\n\r\nexport default compose<ComponentType>(\r\n    connect\r\n    (mapStateToProps,\r\n        {\r\n            follow, unfollow,\r\n            setCurrentPage, toggleFollowingProgress, requestUsers\r\n        }),\r\n   // WithAuthRedirect\r\n)(UsersAPIComponent);\r\n"],"names":["Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","s","onClick","filter","p","map","e","User","user","followingInProgress","unfollow","follow","to","id","src","photos","small","userPhoto","alt","name","status","followed","disabled","some","Users","totalUsersCount","users","u","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","Object","assign","lastResult","recomputations","resetRecomputations","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getPage","page","getIsFetching","isFetching","getFollowingInProgress","UsersAPIComponent","pageNumber","props","requestUsers","this","Preloader","React","compose","connect","setCurrentPage","toggleFollowingProgress"],"sourceRoot":""}