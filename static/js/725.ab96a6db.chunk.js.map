{"version":3,"file":"static/js/725.ab96a6db.chunk.js","mappings":"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","sources":["components/Common/components/FormsControls/FormsControls.tsx","Images/preloader.svg","webpack://social_network_ts/./src/components/Common/components/Preloader/Preloader.module.css?8122","components/Common/components/Preloader/Preloader.tsx","webpack://social_network_ts/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","webpack://social_network_ts/./src/components/Profile/ProfileInfo/ProfileFormData/ProfileDataForm.module.scss?9c4e","components/Profile/ProfileInfo/ProfileFormData/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileFormData/Contact/Contact.tsx","webpack://social_network_ts/./src/components/Profile/Profile.module.scss?4008","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social_network_ts/./src/components/Profile/MyPosts.ts/Post/Post.module.css?ab61","components/Profile/MyPosts.ts/Post/Post.tsx","webpack://social_network_ts/./src/components/Profile/MyPosts.ts/MyPosts.module.scss?9eec","components/Profile/MyPosts.ts/AddPostForm/AddPostForm.tsx","components/Profile/MyPosts.ts/MyPosts.tsx","components/Profile/Profile.tsx","HOC/WithAuthRedirect.tsx","components/Profile/ProfileContainer.tsx","HOC/withRouter.tsx","webpack://social_network_ts/./src/components/Common/components/FormsControls/FormsControls.module.css?d98d"],"sourcesContent":["import React from \"react\";\r\nimport {Field} from \"redux-form\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\n\r\nconst FormControl = ({meta: {touched, error}, children}: any) => {\r\n    const hasError = touched && error;\r\n    const styleError = hasError ? s.error : \"\"\r\n\r\n    return (\r\n        <div className={s.formControl + \" \" + styleError}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props: any) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\nexport const Input = (props: any) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder: string | null, name: string, validators: any[], component: any, props = {}, text = \"\") => {\r\n    return (\r\n        <div>\r\n            <Field\r\n                placeholder={placeholder}\r\n                name={name}\r\n                component={component}\r\n                validate={validators}\r\n                {...props}\r\n            /> {text}\r\n        </div>\r\n    )\r\n}\r\n","var _rect, _rect2, _rect3;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPreloader(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    style: {\n      margin: \"auto\",\n      background: \"rgb(255, 255, 255)\",\n      display: \"block\",\n      shapeRendering: \"auto\"\n    },\n    width: \"250px\",\n    height: \"250px\",\n    viewBox: \"0 0 100 100\",\n    preserveAspectRatio: \"xMidYMid\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 15.5,\n    y: 46,\n    width: 19,\n    height: 8,\n    fill: \"#101010\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"y\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"42.4;46;46\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.12903225806451613s\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"height\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"15.2;8;8\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.12903225806451613s\"\n  }))), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 40.5,\n    y: 46,\n    width: 19,\n    height: 8,\n    fill: \"#224634\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"y\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"43.3;46;46\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.06451612903225806s\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"height\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"13.399999999999999;8;8\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\",\n    begin: \"-0.06451612903225806s\"\n  }))), _rect3 || (_rect3 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 65.5,\n    y: 46,\n    width: 19,\n    height: 8,\n    fill: \"#2f6144\"\n  }, /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"y\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"43.3;46;46\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\"\n  }), /*#__PURE__*/React.createElement(\"animate\", {\n    attributeName: \"height\",\n    repeatCount: \"indefinite\",\n    dur: \"0.6451612903225806s\",\n    calcMode: \"spline\",\n    keyTimes: \"0;0.5;1\",\n    values: \"13.399999999999999;8;8\",\n    keySplines: \"0 0.5 0.5 1;0 0.5 0.5 1\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPreloader);\nexport default __webpack_public_path__ + \"static/media/preloader.f77774137f2b3462da720b53706a898b.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"preloader\":\"Preloader_preloader__+hmO9\"};","import React from \"react\";\r\nimport preloader from \"../../../../Images/preloader.svg\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader} alt={'preloader'}/>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profileInfoBlock\":\"ProfileInfo_profileInfoBlock__B7UEp\",\"imagesBlock\":\"ProfileInfo_imagesBlock__FpCie\",\"avatar\":\"ProfileInfo_avatar__DX-C5\",\"avatarEdit\":\"ProfileInfo_avatarEdit__TNh3Z\",\"profileInfo\":\"ProfileInfo_profileInfo__-4Vl6\",\"statusBlock\":\"ProfileInfo_statusBlock__raKS5\",\"status\":\"ProfileInfo_status__8YYeU\",\"ownerStatus\":\"ProfileInfo_ownerStatus__K2McK\",\"lookingJob\":\"ProfileInfo_lookingJob__g3ke8\",\"profileInfoData\":\"ProfileInfo_profileInfoData__g-b1V\",\"editButtonContainer\":\"ProfileInfo_editButtonContainer__1dgIQ\",\"editButton\":\"ProfileInfo_editButton__sU72N\",\"majorInfo\":\"ProfileInfo_majorInfo__I59nw\",\"fullName\":\"ProfileInfo_fullName__ED5Ys\",\"skills\":\"ProfileInfo_skills__ol57K\",\"contacts\":\"ProfileInfo_contacts__wrq0x\",\"contact\":\"ProfileInfo_contact__RIrah\"};","import React, {ChangeEvent, useEffect, useState} from 'react';\r\nimport s from \"../ProfileInfo.module.scss\"\r\n\r\nexport const ProfileStatus = (props: ProfileStatusType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner && setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.statusBlock}>\r\n            {!editMode &&\r\n                <div className={s.status}><b>Status: </b>\r\n                        <span className={props.isOwner ? s.ownerStatus : ''}\r\n                            onClick={activateEditMode}\r\n                        >{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input\r\n                        onChange={onStatusChange}\r\n                        onBlur={deactivateEditMode}\r\n                        autoFocus={true}\r\n                        value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n// TYPES\r\ntype ProfileStatusType = {\r\n    status: string\r\n    isOwner : boolean\r\n    updateStatus: (status: string) => void\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"editInfo\":\"ProfileDataForm_editInfo__QzP6J\"};","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Preloader} from \"../../../Common/components/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../../Redux/Reducers/profile-reducer\";\r\nimport {createField, Input, Textarea} from \"../../../Common/components/FormsControls/FormsControls\";\r\nimport commonStyle from \"../../../Common/components/FormsControls/FormsControls.module.css\"\r\nimport s from \"./ProfileDataForm.module.scss\";\r\n\r\n\r\nconst ProfileDataForm: React.FC<InjectedFormProps<ProfileType, ProfileDataFormPropsType> & ProfileDataFormPropsType> = ({handleSubmit, profile, error}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className={s.editInfo}>\r\n\r\n            {\r\n                error &&\r\n                <div className={commonStyle.formSummaryError}>{error}</div>\r\n            }\r\n\r\n            <b>Full name </b> {createField(\"Full name\", \"fullName\", [], Input)}\r\n            <b>My professional skills </b>\r\n            {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            <b>Looking for a job </b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            <>\r\n                <h3>Contacts </h3> {Object.keys(profile.contacts)\r\n                .map(key => {\r\n                    return (\r\n                        <div key={key}>\r\n                            <b>{key}</b>\r\n                            {createField(key, \"contacts.\" + key, [], Input)}\r\n                        </div>\r\n\r\n                    )\r\n\r\n                })}\r\n            </>\r\n                <button>save</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm<ProfileType, ProfileDataFormPropsType>({form: 'edit-profile'})(ProfileDataForm)\r\n\r\n\r\nexport default ProfileDataReduxForm;\r\n\r\n\r\n// TYPES\r\ntype ProfileDataFormPropsType = {\r\n    profile: ProfileType\r\n}","import React from \"react\";\r\nimport s from \"../../ProfileInfo.module.scss\";\r\n\r\n\r\nexport const Contact = ({contactTitle, contactValue}: ContactPropsType) => {\r\n    return (\r\n        <div className={s.contact}>\r\n            <b>{contactTitle}: </b>\r\n            <a href={contactValue} rel={\"noreferrer\"} target=\"_blank\">{contactValue}</a>\r\n        </div>\r\n    )\r\n}\r\n\r\n// TYPES\r\ntype ContactPropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"profilePage\":\"Profile_profilePage__mVzds\",\"hr\":\"Profile_hr__9O3kz\"};","import React, {useState} from \"react\";\r\nimport {Preloader} from \"../../../Common/components/Preloader/Preloader\";\r\nimport {ContactsType, ProfileType} from \"../../../../Redux/Reducers/profile-reducer\";\r\nimport {Contact} from \"../ProfileFormData/Contact/Contact\";\r\nimport commonStyle from \"./../../Profile.module.scss\"\r\nimport s from \"../ProfileInfo.module.scss\";\r\n\r\nexport const ProfileData = ({profile, isOwner, goToEditMode}: ProfileDataPropsType) => {\r\n\r\n    const [showContacts, setShowContacts] = useState<boolean>(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    let contacts = []\r\n\r\n    return (\r\n        <div className={s.profileInfoData}>\r\n\r\n            <hr className={commonStyle.hr}/>\r\n            {isOwner\r\n                &&\r\n                (<div className={s.editButtonContainer}>\r\n                    <button className={s.editButton} onClick={goToEditMode}>\r\n                        ✎\r\n                    </button>\r\n                </div>)\r\n            }\r\n            <div className={s.majorInfo}>\r\n                <div className={s.fullName}>\r\n                    {profile.fullName}\r\n                </div>\r\n                {profile.lookingForAJob &&\r\n                    <div className={s.skills}>\r\n                        ({profile.lookingForAJobDescription})\r\n                    </div>\r\n                }\r\n            </div>\r\n            <button\r\n                onClick={() => {\r\n                    setShowContacts(!showContacts)\r\n                }}>\r\n                {showContacts ? 'Hide contacts' : 'Show contacts'}\r\n            </button>\r\n\r\n            {showContacts &&\r\n                <div className={s.contacts}>\r\n                    {contacts = Object.keys(profile.contacts)\r\n                        .filter(key => profile.contacts[key as keyof ContactsType])\r\n                        .map(key => {\r\n                            return <Contact\r\n                                key={key}\r\n                                contactTitle={key}\r\n                                contactValue={profile.contacts[key as keyof ContactsType]}/>\r\n                        })}\r\n                    {contacts.length < 1 && <span>This User didn't specify any info  😩</span>}\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n// TYPES\r\ntype ProfileDataPropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport s from \"./ProfileInfo.module.scss\";\r\nimport {ProfileType} from \"../../../Redux/Reducers/profile-reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from './ProfileFormData/ProfileDataForm';\r\nimport profileImage from \"./../../../Images/flat-face-icon-23.png\"\r\nimport {ProfileData} from \"./ProfileData/ProfileData\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (newPhoto: File) => void\r\n    saveProfile: (profileData: ProfileType) => void\r\n}\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}: ProfileInfoPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n\r\n\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = async (formData: ProfileType): Promise<any> => {\r\n        await saveProfile(formData)\r\n        setEditMode(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfoBlock}>\r\n            <div className={s.imagesBlock}>\r\n                <img className={s.backgroundImg}\r\n                     src={\"https://images.pexels.com/photos/989941/pexels-photo-989941.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"}\r\n                     alt={\"backgroundImg\"}\r\n                />\r\n                <div className={s.avatar}>\r\n                    <img\r\n                        src={profile && profile.photos.large !== null ? profile.photos.large : profileImage}\r\n                        alt={\"avatar\"}/>\r\n                    {isOwner && <div className={s.avatarEdit}>\r\n                        <input type={\"file\"} onChange={onMainPhotoSelected} id=\"imageUpload\"\r\n                               accept=\".png, .jpg, .jpeg\"/>\r\n                        <label htmlFor=\"imageUpload\"/>\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n            <div className={s.profileInfo}>\r\n\r\n                <ProfileStatus\r\n                    status={status}\r\n                    isOwner={isOwner}\r\n                    updateStatus={updateStatus}\r\n                />\r\n                {profile?.lookingForAJob ? <span className={s.lookingJob}>Looking for a job!</span> : ''}\r\n                {editMode\r\n                    ? <ProfileDataForm\r\n                        initialValues={profile}\r\n                        onSubmit={onSubmit}\r\n                        profile={profile}\r\n                    />\r\n                    : <ProfileData\r\n                        profile={profile}\r\n                        isOwner={isOwner}\r\n                        goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"itemBlock\":\"Post_itemBlock__REViE\",\"item\":\"Post_item__Xp8zs\",\"userInfoContainer\":\"Post_userInfoContainer__yH4Hb\",\"messageContainer\":\"Post_messageContainer__+VseC\",\"likesContainer\":\"Post_likesContainer__bt8mV\",\"likeIsActive\":\"Post_likeIsActive__I4ird\"};","import React, {useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport s from \"./Post.module.css\"\r\nimport {PostsType, ProfileType} from \"../../../../Redux/Reducers/profile-reducer\";\r\nimport {AppStateType} from \"../../../../Redux/redux-store\";\r\nimport profileImage from \"../../../../Images/flat-face-icon-23.png\";\r\n\r\n\r\nconst Post = (props: PostsType) => {\r\n\r\n    const [likesCount, setLikesCount] = useState<number>(props.likesCount)\r\n    const [isLiked, setIsLiked] = useState<boolean>(false)\r\n\r\n    const profile = useSelector<AppStateType, ProfileType>(state => state.profilePage.profile)\r\n\r\n    const like = () => {\r\n        !isLiked ?  setLikesCount(likesCount + 1) : setLikesCount(likesCount - 1)\r\n        setIsLiked(!isLiked)\r\n    }\r\n\r\n    return (\r\n        <div key={props.id} className={s.itemBlock}>\r\n            <div className={s.item}>\r\n                <div className={s.userInfoContainer}>\r\n                    <img\r\n                        src={profile?.photos.large !== null ? profile?.photos.large : profileImage}\r\n                        alt={\"img\"}/>\r\n                    <span>{profile?.fullName}</span>\r\n                </div>\r\n                <div className={s.messageContainer}>\r\n                {props.message}\r\n                </div>\r\n                <div className={`${s.likesContainer} ${isLiked ? s.likeIsActive : ''}`}>\r\n                    <span onClick={like}>{isLiked ? '❤️' : '💙' }</span>\r\n                    <span>{likesCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__+ZTjl\",\"addPostFormBlock\":\"MyPosts_addPostFormBlock__kj7qn\",\"fieldContainer\":\"MyPosts_fieldContainer__zmXYM\",\"textField\":\"MyPosts_textField__iIweL\",\"errorField\":\"MyPosts_errorField__KCBFP\",\"posts\":\"MyPosts_posts__wumGE\"};","import React, {ChangeEvent, useState} from \"react\";\r\nimport s from \"../MyPosts.module.scss\"\r\n\r\n\r\nexport const AddPostForm = (props: AddPostFormType) => {\r\n\r\n    const [postText, setPostText] = useState<string>('')\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n    const validate = () => {postText.trim().length > 1 ? addPost(postText) : setError(true)}\r\n\r\n const addPost = (postText: string) => {\r\n     props.addNewPost(postText)\r\n     setPostText('')\r\n }\r\nconst onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    setPostText(e.currentTarget.value)\r\n    setError(false)\r\n}\r\n\r\n    return (\r\n        <div className={s.addPostFormBlock}>\r\n            <div className={s.fieldContainer}>\r\n                <textarea\r\n                    value={postText}\r\n                    placeholder={\"Write your message...\"}\r\n                    className={!error ? s.textField : s.errorField }\r\n                    onChange={onChangeHandler}\r\n                />\r\n            {error && <span>Min length is 2 symbols</span>}\r\n            </div>\r\n                <button onClick={validate}>Add post</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// TYPES\r\nexport type AddPostFormType = {\r\n    addNewPost: (newPostText: string) => void\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Post from \"./Post/Post\";\r\nimport {AppStateType} from \"../../../Redux/redux-store\";\r\nimport {ProfileInitialStateType, profileReducerActions} from \"../../../Redux/Reducers/profile-reducer\";\r\nimport {AddPostForm} from \"./AddPostForm/AddPostForm\";\r\nimport commonStyle from \"./../Profile.module.scss\";\r\nimport s from \"./MyPosts.module.scss\";\r\n\r\nconst MyPosts = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const profilePage = useSelector<AppStateType, ProfileInitialStateType>(state => state.profilePage)\r\n\r\n\r\n    const postsElements =\r\n        profilePage.posts.map(p => <Post key={p.id} id={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    const addNewPost = (newPostText: string) => {\r\n        dispatch(profileReducerActions.addPost(newPostText))\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <hr className={commonStyle.hr}/>\r\n            <AddPostForm addNewPost={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../Redux/Reducers/profile-reducer\";\r\nimport s from \"./Profile.module.scss\"\r\nimport MyPosts from \"./MyPosts.ts/MyPosts\";\r\n\r\ntype ProfileComponentPropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (newPhoto: File) => void\r\n    saveProfile: (profileData: ProfileType) => Promise<any>\r\n}\r\n\r\nconst Profile = (props: ProfileComponentPropsType) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.profilePage}>\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n            {props.isOwner && <MyPosts/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToPropsForRedirect = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function WithAuthRedirect<T>(WrappedComponent: React.ComponentType<T>) {\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n\r\n        const {isAuth, ...restProps} = props;\r\n\r\n        if (!isAuth) {\r\n            return <Navigate to='/login'/>\r\n        }\r\n        return <WrappedComponent {...restProps as T}/>\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\n","import React, {ComponentType} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfile,\r\n    getStatus,\r\n    ProfileType,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatus\r\n} from \"../../Redux/Reducers/profile-reducer\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {InjectedProps, withRouter2} from \"../../HOC/withRouter\";\r\nimport {WithAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {Preloader} from \"../Common/components/Preloader/Preloader\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    profile: ProfileType\r\n    isAuth: boolean\r\n    status: string\r\n    authorizedUserId: string\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setUserProfile: (profile: MapStateToPropsType) => void\r\n    getProfile: (userId: string) => void\r\n    getStatus: (userId: string) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (newPhoto: File) => void\r\n    saveProfile: (profileData: ProfileType) => Promise<any>\r\n}\r\n\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchToPropsType & InjectedProps\r\n\r\n\r\nclass ProfileAPIContainer extends React.Component<OwnPropsType> {\r\n\r\n    updateProfile(){\r\n        let userId: string = this.props.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<OwnPropsType>, prevState: Readonly<{}>, snapshot?: any) {\r\n        if (this.props.userId !== prevProps.userId) {\r\n            this.updateProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <Profile\r\n                isOwner={!this.props.userId}\r\n                profile={this.props.profile}\r\n                status={this.props.status}\r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        isAuth: state.auth.isAuth,\r\n        authorizedUserId: state.auth.data.id\r\n    }\r\n};\r\n\r\nexport default compose<ComponentType>\r\n(connect\r\n    (mapStateToProps, {\r\n        getProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter2,\r\n    WithAuthRedirect\r\n)\r\n(ProfileAPIContainer);\r\n\r\n","import {useLocation, useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const withRouter2 = <T extends object>(WrappedComponent: React.ComponentType<T>) => (props: T) => {\r\n    const params = useParams<'userId'>();\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <WrappedComponent\r\n            {...props as T}\r\n            userId={params.userId}\r\n            location={location}\r\n        />\r\n    );\r\n};\r\n\r\n// TYPES\r\nexport type LocationType = {\r\n    hash: string\r\n    key: string\r\n    pathname: string\r\n    search: string\r\n    state: object | null\r\n}\r\nexport type WrappedComponentWithRouterPropsType = {\r\n    userId: string\r\n    location: LocationType\r\n}\r\nexport type InjectedProps = {\r\n    userId: string\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__S2iyO\",\"error\":\"FormsControls_error__NBuHK\",\"formSummaryError\":\"FormsControls_formSummaryError__LZTot\"};"],"names":["FormControl","meta","touched","error","children","hasError","styleError","s","className","Textarea","props","input","restProps","Input","createField","placeholder","name","validators","component","text","validate","Preloader","src","preloader","alt","ProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","isOwner","onClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","handleSubmit","profile","onSubmit","commonStyle","type","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","href","rel","target","ProfileData","goToEditMode","showContacts","setShowContacts","fullName","lookingForAJob","lookingForAJobDescription","filter","length","savePhoto","saveProfile","formData","photos","large","profileImage","files","id","accept","htmlFor","initialValues","likesCount","setLikesCount","isLiked","setIsLiked","useSelector","state","profilePage","message","AddPostForm","postText","setPostText","setError","addPost","addNewPost","trim","React","dispatch","useDispatch","postsElements","posts","p","newPostText","profileReducerActions","mapStateToPropsForRedirect","isAuth","auth","ProfileAPIContainer","userId","this","authorizedUserId","getProfile","getStatus","updateProfile","prevProps","prevState","snapshot","compose","connect","data","WrappedComponent","params","useParams","location","useLocation","to"],"sourceRoot":""}